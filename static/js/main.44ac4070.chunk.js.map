{"version":3,"sources":["components/Input.jsx","components/Select.jsx","components/Form.jsx","components/SelectFilter.jsx","components/FormFilter.jsx","components/Card.jsx","App.js","index.js"],"names":["Input","this","props","labeltext","type","testid","value","onChange","name","maxLength","htmlFor","className","id","checked","React","Component","Select","Form","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","hasTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","disabled","onClick","filterCard","cardRareFilter","cardTrunfoFilter","SelectFilter","Card","src","alt","initialState","App","handlePrint","target","setState","handleSaveButtonClick","verifyText","state","verifyNumber","num1","Number","num2","num3","verText","verNum","saveCard","event","preventDefault","savedCard","restState","previus","removeButtonClick","trunfo","filter","card","filterCards","includes","FormFilter","undefined","map","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44ac4070.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  render() {\n    const { labeltext, type, testid, value, onChange, name, maxLength} = this.props;\n    return (\n      <label htmlFor={ labeltext } className={ labeltext }>\n        <span>{ labeltext }</span>\n        {type === 'checkbox' ? <input\n          id={ labeltext }\n          data-testid={ testid }\n          maxLength={ maxLength }\n          type={ type }\n          checked={ value }\n          onChange={ onChange }\n          name={ name }\n        /> : <input\n          id={ labeltext }\n          data-testid={ testid }\n          maxLength={ maxLength }\n          type={ type }\n          value={ value }\n          onChange={ onChange }\n          name={ name }\n        /> }\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  labeltext: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  testid: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.Component {\n  render() {\n    const { labeltext, type, testid, value, onChange, name } = this.props;\n    return (\n      <label htmlFor={ labeltext } className={ labeltext }>\n        { labeltext }\n        <select\n          id={ labeltext }\n          data-testid={ testid }\n          type={ type }\n          value={ value }\n          onChange={ onChange }\n          name={ name }\n        >\n          <option value=\"Grass\">Grass-original</option>\n          <option value=\"Fire\">Fire-original</option>\n          <option value=\"Water\">Water-original</option>\n          <option value=\"Eletric\">Eletric-original</option>\n          <option value=\"Psychic\">Psychic-original</option>\n          <option value=\"Fighting\">Fighting-original</option>\n          <option value=\"Dark\">Dark-original</option>\n          <option value=\"Metal\">Metal-original</option>\n          <option value=\"Dragon\">Dragon-original</option>\n          <option value=\"Fairy\">Fairy-original</option>\n          <option value=\"Normal\">Normal-original</option>\n          <option value=\"Grass-x\">Grass-X</option>\n          <option value=\"Fire-x\">Fire-X</option>\n          <option value=\"Water-x\">Water-X</option>\n          <option value=\"Eletric-x\">Eletric-X</option>\n          <option value=\"Psychic-x\">Psychic-X</option>\n          <option value=\"Fighting-x\">Fighting-X</option>\n          <option value=\"Dark-x\">Dark-X</option>\n          <option value=\"Metal-x\">Metal-X</option>\n          <option value=\"Dragon-x\">Dragon-X</option>\n          <option value=\"Fairy-x\">Fairy-X</option>\n          <option value=\"Normal-x\">Normal-X</option>\n          <option value=\"Sound-x\">Sound-X</option>\n          <option value=\"Cyber-x\">Cyber-X</option>\n          <option value=\"Light-x\">Light-X</option>\n          <option value=\"Flying-x\">Flying-X</option>\n          <option value=\"Rock-x\">Rock-X</option>\n          <option value=\"Ground-x\">Ground-X</option>\n          <option value=\"Bug-x\">Bug-X</option>\n          <option value=\"Cosmic-x\">Cosmic-X</option>\n          <option value=\"Ghost-x\">Ghost-X</option>\n          <option value=\"Ice-x\">Ice-X</option>\n          <option value=\"Poison-x\">Poison-X</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  labeltext: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  testid: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport Select from './Select';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick } = this.props;\n\n    return (\n      <div className=\"inputFields\">\n        <Input\n          labeltext=\"Name\"\n          type=\"text\"\n          testid=\"name-input\"\n          maxLength='11'\n          name=\"cardName\"\n          value={ cardName }\n          onChange={ onInputChange }\n        />\n        <Input\n          labeltext=\"Description\"\n          type=\"textarea\"\n          maxLength='141'\n          testid=\"description-input\"\n          name=\"cardDescription\"\n          value={ cardDescription }\n          onChange={ onInputChange }\n        />\n        <Input\n          labeltext=\"Attack\"\n          type=\"number\"\n          testid=\"attr1-input\"\n          name=\"cardAttr1\"\n          value={ cardAttr1 }\n          onChange={ onInputChange }\n        />\n        <Input\n          labeltext=\"Defense\"\n          type=\"number\"\n          testid=\"attr2-input\"\n          name=\"cardAttr2\"\n          value={ cardAttr2 }\n          onChange={ onInputChange }\n        />\n        <Input\n          labeltext=\"Special\"\n          type=\"number\"\n          testid=\"attr3-input\"\n          name=\"cardAttr3\"\n          value={ cardAttr3 }\n          onChange={ onInputChange }\n        />\n        <Input\n          labeltext=\"Image\"\n          type=\"text\"\n          testid=\"image-input\"\n          name=\"cardImage\"\n          value={ cardImage }\n          onChange={ onInputChange }\n        />\n        <Select\n          labeltext=\"Type\"\n          type=\"select\"\n          testid=\"rare-input\"\n          name=\"cardRare\"\n          value={ cardRare }\n          onChange={ onInputChange }\n        />\n        { hasTrunfo ? <p>You already have a ST Card in your deck!</p> : <Input\n          labeltext=\"ST-Card\"\n          type=\"checkbox\"\n          testid=\"trunfo-input\"\n          name=\"cardTrunfo\"\n          value={ cardTrunfo }\n          onChange={ onInputChange }\n        />}\n        <button\n          type=\"submit\"\n          data-testid=\"save-button\"\n          disabled={ isSaveButtonDisabled }\n          onClick={ onSaveButtonClick }\n        >\n          Save\n        </button>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.number.isRequired,\n  cardAttr2: PropTypes.number.isRequired,\n  cardAttr3: PropTypes.number.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.Component {\n  render() {\n    const { labeltext, type, testid, value, onChange, name } = this.props;\n    return (\n      <label htmlFor={ labeltext }>\n        { labeltext }\n        <select\n          id={ labeltext }\n          data-testid={ testid }\n          type={ type }\n          value={ value }\n          onChange={ onChange }\n          name={ name }\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Grass\">Grass-original</option>\n          <option value=\"Fire\">Fire-original</option>\n          <option value=\"Water\">Water-original</option>\n          <option value=\"Eletric\">Eletric-original</option>\n          <option value=\"Psychic\">Psychic-original</option>\n          <option value=\"Fighting\">Fighting-original</option>\n          <option value=\"Dark\">Dark-original</option>\n          <option value=\"Metal\">Metal-original</option>\n          <option value=\"Dragon\">Dragon-original</option>\n          <option value=\"Fairy\">Fairy-original</option>\n          <option value=\"Normal\">Normal-original</option>\n          <option value=\"Grass-x\">Grass-X</option>\n          <option value=\"Fire-x\">Fire-X</option>\n          <option value=\"Water-x\">Water-X</option>\n          <option value=\"Eletric-x\">Eletric-X</option>\n          <option value=\"Psychic-x\">Psychic-X</option>\n          <option value=\"Fighting-x\">Fighting-X</option>\n          <option value=\"Dark-x\">Dark-X</option>\n          <option value=\"Metal-x\">Metal-X</option>\n          <option value=\"Dragon-x\">Dragon-X</option>\n          <option value=\"Fairy-x\">Fairy-X</option>\n          <option value=\"Normal-x\">Normal-X</option>\n          <option value=\"Sound-x\">Sound-X</option>\n          <option value=\"Cyber-x\">Cyber-X</option>\n          <option value=\"Light-x\">Light-X</option>\n          <option value=\"Flying-x\">Flying-X</option>\n          <option value=\"Rock-x\">Rock-X</option>\n          <option value=\"Ground-x\">Ground-X</option>\n          <option value=\"Bug-x\">Bug-X</option>\n          <option value=\"Cosmic-x\">Cosmic-X</option>\n          <option value=\"Ghost-x\">Ghost-X</option>\n          <option value=\"Ice-x\">Ice-X</option>\n          <option value=\"Poison-x\">Poison-X</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  labeltext: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  testid: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport SelectFilter from './SelectFilter';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      filterCard,\n      cardRareFilter,\n      cardTrunfoFilter,\n      onInputChange } = this.props;\n\n    return (\n      <div className=\"inputFilterFields\">\n        <Input\n          labeltext=\"Search Cards\"\n          type=\"text\"\n          testid=\"name-filter\"\n          name=\"filterCard\"\n          value={ filterCard }\n          onChange={ onInputChange }\n        />\n        <SelectFilter\n          labeltext=\"Type\"\n          type=\"select\"\n          testid=\"rare-filter\"\n          name=\"cardRareFilter\"\n          value={ cardRareFilter }\n          onChange={ onInputChange }\n        />\n        <Input\n          labeltext=\"ST-Card\"\n          type=\"checkbox\"\n          testid=\"trunfo-filter\"\n          name=\"cardTrunfoFilter\"\n          value={ cardTrunfoFilter }\n          onChange={ onInputChange }\n        />\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  filterCard: PropTypes.string.isRequired,\n  cardRareFilter: PropTypes.string.isRequired,\n  cardTrunfoFilter: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo } = this.props;\n\n    return (\n      <div className={ cardRare }>\n        <div className=\"cardBg\">\n          <div className=\"cardTop\">\n            <h2 data-testid=\"name-card\">{ cardName }</h2>\n            { cardTrunfo && <p data-testid=\"trunfo-card\">ST</p>}\n          </div>\n          <div className=\"cardImage\">\n            { cardImage !== '' && (\n              <img src={ cardImage } alt={ cardName } data-testid=\"image-card\" />)}\n          </div>\n          <div className=\"cardDiscription\">\n            <p data-testid=\"description-card\">{ cardDescription }</p>\n          </div>\n          <div className=\"cardAtrr\">\n            { cardAttr1 !== 0 && (\n              <div className=\"atr\">\n                <h4>\n                  Attack - - - - - - - - - - - - - - - - -\n                </h4>\n                <p data-testid=\"attr1-card\">\n                  { cardAttr1 }\n                </p>\n              </div>)}\n            { cardAttr2 !== 0 && (\n              <div className=\"atr\">\n                <h4>\n                  Defense - - - - - - - - - - - - - - - -\n                </h4>\n                <p data-testid=\"attr2-card\">\n                  { cardAttr2 }\n                </p>\n              </div>)}\n            { cardAttr3 !== 0 && (\n              <div className=\"atr\">\n                <h4>\n                  Special - - - - - - - - - - - - - - - - -\n                </h4>\n                <p data-testid=\"attr3-card\">\n                  { cardAttr3 }\n                </p>\n              </div>)}\n          </div>\n          <div className=\"cardBotton\">\n            <p data-testid=\"rare-card\">{ cardRare }</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.number.isRequired,\n  cardAttr2: PropTypes.number.isRequired,\n  cardAttr3: PropTypes.number.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport Form from './components/Form';\nimport FormFilter from './components/FormFilter';\nimport Card from './components/Card';\nimport './App.css';\n\nconst initialState = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: 0,\n  cardAttr2: 0,\n  cardAttr3: 0,\n  cardImage: '',\n  cardRare: 'Fire-x',\n  cardTrunfo: false,\n  filterCard: '',\n  cardRareFilter: 'All',\n  cardTrunfoFilter: false,\n  isSaveButtonDisabled: true,\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      ...initialState,\n      hasTrunfo: false,\n      savedCard: [],\n    };\n  }\n\n  handlePrint = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    }, () => this.handleSaveButtonClick());\n  };\n\n  verifyText = () => {\n    const { cardName, cardDescription, cardImage, cardRare } = this.state;\n    if (\n      cardName !== ''\n      && cardDescription !== ''\n      && cardImage !== ''\n      && cardRare !== ''\n    ) return true;\n    return false;\n  }\n\n  verifyNumber = () => {\n    const { cardAttr1, cardAttr2, cardAttr3 } = this.state;\n    const num1 = Number(cardAttr1);\n    const num2 = Number(cardAttr2);\n    const num3 = Number(cardAttr3);\n    const maxSum = 300;\n    const maxNum = 100;\n    if (\n      num1 + num2 + num3 <= maxSum\n      && num1 <= maxNum\n      && num2 <= maxNum\n      && num3 <= maxNum\n      && num1 >= 0\n      && num2 >= 0\n      && num3 >= 0\n    ) return true;\n    return false;\n  }\n\n  handleSaveButtonClick = () => {\n    const verText = this.verifyText();\n    const verNum = this.verifyNumber();\n    if (verText && verNum) {\n      this.setState({ isSaveButtonDisabled: false });\n    } else {\n      this.setState({ isSaveButtonDisabled: true });\n    }\n    // const buttonDisabled = (verText && verNum);\n    // this.setState({ isSaveButtonDisabled: !buttonDisabled });\n  };\n\n  saveCard = (event) => {\n    event.preventDefault();\n    const { savedCard, hasTrunfo, ...restState } = this.state;\n    this.setState((previus) => ({\n      savedCard: [...previus.savedCard, restState],\n      hasTrunfo: restState.cardTrunfo ? true : hasTrunfo,\n      ...initialState }));\n  }\n\n  removeButtonClick = (name, trunfo) => {\n    const { savedCard } = this.state;\n    this.setState((previus) => ({\n      savedCard: savedCard.filter((card) => card.cardName !== name),\n      hasTrunfo: trunfo ? false : previus.hasTrunfo,\n    }));\n  }\n\n  filterCards = () => {\n    const { savedCard, filterCard, cardRareFilter, cardTrunfoFilter } = this.state;\n    if (cardTrunfoFilter) {\n      return savedCard.filter((card) => (card.cardTrunfo === true));\n    }\n    if (filterCard !== '') {\n      return savedCard.filter((card) => card.cardName.includes(filterCard));\n    }\n    if (cardRareFilter !== 'All') {\n      return savedCard.filter((card) => (card.cardRare === cardRareFilter));\n    }\n    return savedCard;\n  }\n\n  render() {\n    const { savedCard } = this.state;\n    return (\n      <div className=\"secondBody\">\n        <header className=\"headerApp\">\n          <h1>Pokemon Cards - The Game!</h1>\n        </header>\n        <div className=\"mainSection\">\n          <div className=\"addCard\">\n            <h1>Add New Card</h1>\n            <Form\n              { ...this.state }\n              onInputChange={ this.handlePrint }\n              onSaveButtonClick={ this.saveCard }\n            />\n          </div>\n          <div className=\"cardRender\">\n            <div className=\"cardPreview\">\n              <Card { ...this.state } />\n            </div>\n          </div>\n        </div>\n        <div className=\"secondSection\">\n          <h1>Created Cards - Deck</h1>\n          <div className=\"secondSectionContent\">\n            <div className=\"sectionFilter\">\n              <FormFilter\n                { ...this.state }\n                onInputChange={ this.handlePrint }\n              />\n            </div>\n            <div className=\"printed-cards\">\n              {savedCard !== undefined\n              && this.filterCards().map((card) => (\n                <div className=\"saved-card\" key={ card.cardName }>\n                  <div className=\"saved-card2\" id={ card.cardName }>\n                    <Card { ...card } />\n                    <button\n                      type=\"button\"\n                      data-testid=\"delete-button\"\n                      onClick={ () => this\n                        .removeButtonClick(card.cardName, card.cardTrunfo) }\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>))}\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer\">\n          <h4>\n            All rights reserved to Jupiter group\n            {' '}\n            <span>&#169;</span>\n          </h4>\n          <p><a href=\"https://www.linkedin.com/in/luizfcmodolo/\" target=\"_blank\" rel=\"noreferrer\">Luiz Modolo</a></p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}